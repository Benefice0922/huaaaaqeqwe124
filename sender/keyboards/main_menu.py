from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def get_main_menu() -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text="üöÄ –°—Ç–∞—Ä—Ç —Ä–∞—Å—Å—ã–ª–∫–∞", callback_data="start_mailing")],
        [InlineKeyboardButton(text="üßë‚Äçüíª –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞–º–∏", callback_data="manage_browsers")],
        [
            InlineKeyboardButton(text="üåê –ü—Ä–æ–∫—Å–∏", callback_data="proxy"),
            InlineKeyboardButton(text="üë§ –ê–∫–∫–∞—É–Ω—Ç—ã", callback_data="accounts")
        ],
        [InlineKeyboardButton(text="üìã –ü–ª–æ—â–∞–¥–∫–∏ –¥–ª—è –≤–æ—Ä–∫–∞", callback_data="work_platforms")],
        [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_back_menu() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
    )

def get_browser_control_keyboard(status: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞"""
    buttons = []
    if status == "running":
        buttons.append([InlineKeyboardButton(text="‚è∏ –ü–∞—É–∑–∞", callback_data="pause_browser")])
    else:
        buttons.append([InlineKeyboardButton(text="‚ñ∂ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="resume_browser")])
    buttons.append([InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="close_browser")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_manage_browsers_keyboard(has_browsers: bool) -> InlineKeyboardMarkup:
    """–°—Ç–∞—Ä—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏."""
    buttons = []
    if has_browsers:
        buttons.append([InlineKeyboardButton(text="üõë –ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ", callback_data="close_all_browsers")])
    buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_manage_browsers_list_keyboard(active_browsers: dict) -> InlineKeyboardMarkup:
    """
    –ù–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî —Å–ø–∏—Å–æ–∫ —Å–µ—Å—Å–∏–π + –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–∞–∂–¥—É—é: –ü–∞—É–∑–∞/–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å/–ó–∞–∫—Ä—ã—Ç—å.
    –ö–æ–ª–±—ç–∫–∏: pause_browser_id:{id}, resume_browser_id:{id}, close_browser_id:{id}
    """
    rows = []
    if active_browsers:
        for bid, data in active_browsers.items():
            status = data.get("status", "running")
            title = f"#{bid} | {data.get('platform','').upper()} | {data.get('username') or '–ë–µ–∑ –∞–∫–∫–∞—É–Ω—Ç–∞'}"
            status_txt = "‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" if status == "paused" else "‚ñ∂Ô∏è –†–∞–±–æ—Ç–∞–µ—Ç"
            rows.append([InlineKeyboardButton(text=f"üß≠ {title} [{status_txt}]", callback_data="noop")])
            btns = []
            if status == "running":
                btns.append(InlineKeyboardButton(text="‚è∏ –ü–∞—É–∑–∞", callback_data=f"pause_browser_id:{bid}"))
            elif status == "paused":
                btns.append(InlineKeyboardButton(text="‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data=f"resume_browser_id:{bid}"))
            btns.append(InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data=f"close_browser_id:{bid}"))
            rows.append(btns)
        rows.append([InlineKeyboardButton(text="üõë –ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ", callback_data="close_all_browsers")])
    rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    return InlineKeyboardMarkup(inline_keyboard=rows)