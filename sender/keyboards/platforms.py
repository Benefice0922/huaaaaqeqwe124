from aiogram import types

def get_countries_menu():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã"""
    kb = [
        [
            types.InlineKeyboardButton(text="üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", callback_data="country_kz")
        ],
        [
            types.InlineKeyboardButton(text="üá∞üá¨ –ö–∏—Ä–≥–∏–∑–∏—è", callback_data="country_kg")
        ],
        [
            types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)

def get_platforms_menu(country="kz"):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω—ã"""
    kb = []
    
    if country == "kz":
        kb = [
            [
                types.InlineKeyboardButton(text="üè¢ Krisha.kz", callback_data="krisha")
            ],
            [
                types.InlineKeyboardButton(text="üöó Kolesa.kz", callback_data="kolesa")
            ],
            [
                types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_countries")
            ]
        ]
    elif country == "kg":
        kb = [
            [
                types.InlineKeyboardButton(text="üõí Lalafo.kg", callback_data="lalafo")
            ],
            [
                types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_countries")
            ]
        ]
    
    return types.InlineKeyboardMarkup(inline_keyboard=kb)

def get_platform_settings_menu(platform, settings):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ‚Äî –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç, –≤—Ç–æ—Ä–∞—è –ª–∏–º–∏—Ç—ã, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø–æ –æ–¥–Ω–æ–π"""
    multithread_status = "‚úÖ" if settings.get("multithread", False) else "‚ùå"
    keyboard = [
        [  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: —Ç–æ–ª—å–∫–æ –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç
            types.InlineKeyboardButton(
                text="üìù –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç",
                callback_data=f"edit_custom_text_{platform}"
            ),
        ],
        [  # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –ª–∏–º–∏—Ç –æ—Ç–ø–∏—Å–æ–∫ –∏ –ª–∏–º–∏—Ç –ø—Ä–æ–∫—Å–∏
            types.InlineKeyboardButton(
                text="üì© –õ–∏–º–∏—Ç –æ—Ç–ø–∏—Å–æ–∫",
                callback_data=f"edit_max_unsubscribes_{platform}"
            ),
            types.InlineKeyboardButton(
                text="üåê –õ–∏–º–∏—Ç –ø—Ä–æ–∫—Å–∏",
                callback_data=f"edit_max_proxies_per_account_{platform}"
            ),
        ],
        [  # –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–∞—É–∑–µ—Ä–æ–≤
            types.InlineKeyboardButton(
                text="üíª –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–∞—É–∑–µ—Ä–æ–≤",
                callback_data=f"edit_browser_count_{platform}"
            ),
        ],
        [  # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Å—Ç—Ä–æ–∫–∞: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
            types.InlineKeyboardButton(
                text="üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏",
                callback_data=f"edit_categories_{platform}"
            ),
        ],
        [  # –ü—è—Ç–∞—è —Å—Ç—Ä–æ–∫–∞: –î–æ–ø. —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
            types.InlineKeyboardButton(
                text="üîé –î–æ–ø. —Å–µ–ª–µ–∫—Ç–æ—Ä—ã",
                callback_data=f"edit_selectors_{platform}"
            ),
        ],
        [  # –®–µ—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞: –ú—É–ª—å—Ç–∏–ø–æ—Ç–æ–∫
            types.InlineKeyboardButton(
                text=f"üîÑ –ú—É–ª—å—Ç–∏–ø–æ—Ç–æ–∫ {multithread_status}",
                callback_data=f"toggle_multithread_{platform}"
            ),
        ],
        [  # –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞: –ù–∞–∑–∞–¥ –∫ –ø–ª–æ—â–∞–¥–∫–∞–º
            types.InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–ª–æ—â–∞–¥–∫–∞–º",
                callback_data="platforms"
            )
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=keyboard)