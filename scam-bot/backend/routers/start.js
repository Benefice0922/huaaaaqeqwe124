const { Markup } = require("telegraf");
const { Op } = require("sequelize");
const moment = require("moment");
const {
  items,
  Profits,
  settings,
  Logs,
} = require("../../../database/index");

module.exports = async (ctx) => {
  try {
    if (ctx.state.req == true || ctx.state.user.status == 0) {
      return ctx.replyWithHTML(
        `üíÅüèª‚Äç‚ôÇÔ∏è <b>–ü—Ä–∏–≤–µ—Ç,</b> ${ctx.from.first_name}<b>!</b>
ü¶ã <b>–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ —Ç–µ–±–µ –Ω–∞–¥–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É!</b>`,
        {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [Markup.callbackButton("üîπ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É! üîπ", "sendRequest")],
          ]),
        }
      );
    }

    await ctx.deleteMessage().catch((err) => err);

    try {
      // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
      const Settings = await settings.findOne({ where: { id: 1 } });
      
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏—Ç–æ–≤ –∑–∞ –¥–µ–Ω—å
      const todayStart = moment().startOf('day').toDate();
      const dayProfits = await Profits.count({
        where: {
          workerId: ctx.from.id,
          createdAt: { [Op.gte]: todayStart }
        }
      });

      const daySum = await Profits.sum('eurAmount', {
        where: {
          workerId: ctx.from.id,
          createdAt: { [Op.gte]: todayStart }
        }
      }) || 0;

      // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏—Ç–æ–≤
      const totalProfits = await Profits.count({
        where: { workerId: ctx.from.id }
      });

      const totalSum = await Profits.sum('eurAmount', {
        where: { workerId: ctx.from.id }
      }) || 0;

      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
      const activeLinks = await items.count({
        where: { workerId: ctx.from.id }
      });

      // –î–Ω–∏ –≤ –∫–æ–º–∞–Ω–¥–µ
      const createdAt = ctx.state.user.createdAt || new Date();
      const daysInTeam = Math.ceil((new Date() - new Date(createdAt)) / (1000 * 60 * 60 * 24));

      return ctx
        .replyWithHTML(
          `ü¶Ö <b>href="https://t.me/https://t.me/${ctx.state.user.username || ctx.from.username}">DARKHAVEN –ü–†–û–§–ò–õ–¨</a></b>

üë§ <b>–ü–æ–∑—ã–≤–Ω–æ–π:</b> #${ctx.state.user.tag}
‚öñÔ∏è <b>–¢–≤–æ—è –¥–æ–ª—è:</b> ${ctx.state.user.percent || Settings.percent}%

ü™∂ <b>–°–æ–±—Ä–∞–Ω–æ –¥–∞–Ω–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:</b>
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ—Ö–æ–≤: <b>${dayProfits}</b>
‚Ä¢ –ù–∞ —Å—É–º–º—É: <b>$${daySum.toFixed(2)}</b>

ü¶Ö <b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è:</b>
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ—Ö–æ–≤: <b>${totalProfits}</b>
‚Ä¢ –ù–∞ —Å—É–º–º—É: <b>$${totalSum.toFixed(2)}</b>

üö¶ <b>–°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:</b> ${Settings.work ? 'üü¢ WORK' : 'üî¥ STOP'}
üîó <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Å—ã–ª–æ–∫:</b> ${activeLinks}
‚è±Ô∏è <b>–í –∫–æ–º–∞–Ω–¥–µ:</b> ${daysInTeam} –¥–Ω–µ–π`,
          {
            reply_markup: Markup.inlineKeyboard([
              // –ü–µ—Ä–≤—ã–π —Ä—è–¥ - –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
              [
                Markup.callbackButton("üåè –°—Ç—Ä–∞–Ω—ã", "createLink"),
              ],
              
              // –í—Ç–æ—Ä–æ–π —Ä—è–¥ - –∫–æ–Ω—Ç–µ–Ω—Ç –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
              [
                Markup.callbackButton("üìÑ –û–±—ä—è–≤–ª–µ–Ω–∏—è", "myAds"),
                Markup.callbackButton("üí∞ –ü—Ä–æ—Ñ–∏—Ç—ã", "myProfits")
              ],
              
              // –¢—Ä–µ—Ç–∏–π —Ä—è–¥ - –ª—é–¥–∏ –∏ –ø–æ–º–æ—â—å
              [
                Markup.callbackButton("üë©‚Äçüè´ –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏", "mentors"),
                Markup.callbackButton("üèÜ –¢–ü—à–µ—Ä—ã", "tpManagers")
              ],
              
              // –ß–µ—Ç–≤–µ—Ä—Ç—ã–π —Ä—è–¥ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              [
                Markup.callbackButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "projectInfo"),
                Markup.callbackButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "settings")
              ],
              
              // –ü—è—Ç—ã–π —Ä—è–¥ - –ø—Ä–æ—Ñ–∏–ª—å (–ø–æ —Ü–µ–Ω—Ç—Ä—É, –∫–∞–∫ –≤–∞–∂–Ω–∞—è –∫–Ω–æ–ø–∫–∞)
              [Markup.callbackButton("üíÅüèº‚Äç‚ôÇÔ∏è –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", "profile")],
              
              // –®–µ—Å—Ç–æ–π —Ä—è–¥ - –∂–∞–ª–æ–±—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–º–µ–Ω–µ–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ)
              [Markup.callbackButton("‚ö†Ô∏è –ñ–∞–ª–æ–±—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", "report")],
              
              // –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (–µ—Å–ª–∏ –∞–¥–º–∏–Ω)
              ...(ctx.state.user.admin == true
                ? [[Markup.callbackButton("üíª –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", "admin")]]
                : []),
            ]),
          }
        )
        .catch((err) => err);

    } catch (statsError) {
      console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsError);
      
      // Fallback –º–µ–Ω—é –±–µ–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      return ctx
        .replyWithHTML(
          `ü¶Ö <b> DARKHAVEN –ü–†–û–§–ò–õ–¨</b>

üë§ <b>–ü–æ–∑—ã–≤–Ω–æ–π:</b> #${ctx.state.user.tag}
‚öñÔ∏è <b>–¢–≤–æ—è –¥–æ–ª—è:</b> ${ctx.state.user.percent || 60}%

‚ùå <b>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</b>

üö¶ <b>–°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:</b> –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ
üîó <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Å—ã–ª–æ–∫:</b> –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ
‚è±Ô∏è <b>–í –∫–æ–º–∞–Ω–¥–µ:</b> –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ`,
          {
            reply_markup: Markup.inlineKeyboard([
              [
                Markup.callbackButton("üåè –°—Ç—Ä–∞–Ω—ã", "createLink")              ],
              [
                Markup.callbackButton("üìÑ –û–±—ä—è–≤–ª–µ–Ω–∏—è", "myAds"),
                Markup.callbackButton("üí∞ –ü—Ä–æ—Ñ–∏—Ç—ã", "myProfits")
              ],
              [
                Markup.callbackButton("üë©‚Äçüè´ –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏", "mentors"),
                Markup.callbackButton("üèÜ –¢–ü—à–µ—Ä—ã", "tpManagers")
              ],
              [
                Markup.callbackButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "projectInfo"),
                Markup.callbackButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "settings")
              ],
              [Markup.callbackButton("üíÅüèº‚Äç‚ôÇÔ∏è –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", "profile")],
              [Markup.callbackButton("‚ö†Ô∏è –ñ–∞–ª–æ–±—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", "report")],
              ...(ctx.state.user.admin == true
                ? [[Markup.callbackButton("üíª –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", "admin")]]
                : []),
            ]),
          }
        )
        .catch((err) => err);
    }
  } catch (err) {
    console.log('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ start.js:', err);
    return ctx.replyWithHTML("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
};