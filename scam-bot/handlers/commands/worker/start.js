const { Markup } = require("telegraf");
const { Op } = require("sequelize");
const moment = require("moment");
const {
  items,
  Profits,
  settings,
  Logs,
} = require("../../../database/index");

module.exports = async (ctx) => {
  try {
    if (ctx.state.req == true || ctx.state.user.status == 0) {
      return ctx.replyWithHTML(
        `üíÅüèª‚Äç‚ôÇÔ∏è <b>–ü—Ä–∏–≤–µ—Ç,</b> ${ctx.from.first_name}<b>!</b>
ü¶ã <b>–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ —Ç–µ–±–µ –Ω–∞–¥–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É!</b>`,
        {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [Markup.callbackButton("üîπ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É! üîπ", "sendRequest")],
          ]),
        }
      );
    }

    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    try {
      await ctx.deleteMessage();
    } catch (deleteErr) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —É–¥–∞–ª–µ–Ω–∏—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
    }

    try {
      // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
      const Settings = await settings.findOne({ where: { id: 1 } });
      
      // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏—Ç–æ–≤
      const totalProfits = await Profits.count({
        where: { workerId: ctx.from.id }
      });

      const totalSum = await Profits.sum('eurAmount', {
        where: { workerId: ctx.from.id }
      }) || 0;

      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
      const activeLinks = await items.count({
        where: { workerId: ctx.from.id }
      });

      // –î–Ω–∏ –≤ –∫–æ–º–∞–Ω–¥–µ
      const createdAt = ctx.state.user.createdAt || new Date();
      const daysInTeam = Math.ceil((new Date() - new Date(createdAt)) / (1000 * 60 * 60 * 24));

      return ctx
        .replyWithHTML(
          `üåëü¶Ö <b><a href="tg://user?id=${ctx.from.id}">DARKHAVEN –ü–†–û–§–ò–õ–¨</a></b>

üë§ <b>–•–ï–®–¢–ï–ì:</b> #${ctx.state.user.tag}
üí∞ <b>–¢–í–û–Ø –î–û–õ–Ø:</b> ${ctx.state.user.percent || Settings.percent}%

üèÜ <b>–ü–†–û–§–ò–¢–û–í:</b> ${totalProfits} - $${totalSum.toFixed(2)}
üöÄ <b>–°–¢–ê–¢–£–° –ü–†–û–ï–ö–¢–ê:</b> ${Settings.work ? 'üü¢ WORK' : 'üî¥ STOP'}
üîó <b>–°–°–´–õ–û–ö:</b> ${activeLinks} | ‚åõÔ∏è <b>–°–¢–ê–ñ:</b> ${daysInTeam} –¥–Ω.

ü§ù <a href="${Settings.workerChatUrl || '#'}">–ß–∞—Ç –∫–æ–º–∞–Ω–¥—ã</a> | üíµ <a href="${Settings.payChatUrl || '#'}">–í—ã–ø–ª–∞—Ç—ã</a>`,
          {
            reply_markup: Markup.inlineKeyboard([
              // –ü–µ—Ä–≤—ã–π —Ä—è–¥ - –°—Ç—Ä–∞–Ω—ã (–ø–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞)
              [Markup.callbackButton("üåç –°–¢–†–ê–ù–´", "createLink")],
              
              // –í—Ç–æ—Ä–æ–π —Ä—è–¥ - –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–µ—Ä–≤–∏—Å (–ø–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞)
              [Markup.callbackButton("üîÇ –°–û–ó–î–ê–¢–¨ –ü–†–ï–î–´–î–£–©–ò–ô –°–ï–†–í–ò–°", "createPreviousService")],
              
              // –¢—Ä–µ—Ç–∏–π —Ä—è–¥ - –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏ –∏ –¢–ü—à–µ—Ä—ã
              [
                Markup.callbackButton("üë®‚Äçüè´ –ù–ê–°–¢–ê–í–ù–ò–ö–ò", "mentors"),
                Markup.callbackButton("üèÜ –¢–ü–®–ï–†–´", "tpManagers")
              ],

              // –ß–µ—Ç–≤–µ—Ä—Ç—ã–π —Ä—è–¥ - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –ü—Ä–æ—Ñ–∏—Ç—ã
              [
                Markup.callbackButton("‚ÑπÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø", "projectInfo"),
                Markup.callbackButton("üí∞ –ü–†–û–§–ò–¢–´", "myProfits")
              ],
              
              // –ü—è—Ç—ã–π —Ä—è–¥ - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (–ø–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞)
              [Markup.callbackButton("üß∞ –ò–ù–°–¢–†–£–ú–ï–ù–¢–´", "settings")],
              
              // –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (–µ—Å–ª–∏ –∞–¥–º–∏–Ω)
              ...(ctx.state.user.admin == true
                ? [[Markup.callbackButton("üíª –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨", "admin")]]
                : []),
            ]),
          }
        )
        .then(() => {
          console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', ctx.from.id);
        })
        .catch((err) => {
          console.log('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', err);
          return err;
        });

    } catch (statsError) {
      console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsError);
      
      // Fallback –º–µ–Ω—é –±–µ–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      return ctx
        .replyWithHTML(
          `üåëü¶Ö <b><a href="tg://user?id=${ctx.from.id}">DARKHAVEN –ü–†–û–§–ò–õ–¨</a></b>

üë§ <b>–•–ï–®–¢–ï–ì:</b> #${ctx.state.user.tag}
üí∞ <b>–¢–í–û–Ø –î–û–õ–Ø:</b> ${ctx.state.user.percent || 60}%

‚ùå <b>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</b>

üöÄ <b>–°–¢–ê–¢–£–° –ü–†–û–ï–ö–¢–ê:</b> –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ
üîó <b>–°–°–´–õ–û–ö:</b> –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ | ‚åõÔ∏è <b>–°–¢–ê–ñ:</b> –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ

ü§ù <a href="#">–ß–∞—Ç –∫–æ–º–∞–Ω–¥—ã</a> | üíµ <a href="#">–í—ã–ø–ª–∞—Ç—ã</a>`,
          {
            reply_markup: Markup.inlineKeyboard([
              [Markup.callbackButton("üåç –°–¢–†–ê–ù–´", "createLink")],
              [Markup.callbackButton("üîÇ –°–û–ó–î–ê–¢–¨ –ü–†–ï–î–´–î–£–©–ò–ô –°–ï–†–í–ò–°", "createPreviousService")],
              [
                Markup.callbackButton("üë®‚Äçüè´ –ù–ê–°–¢–ê–í–ù–ò–ö–ò", "mentors"),
                Markup.callbackButton("üèÜ –¢–ü–®–ï–†–´", "tpManagers")
              ],
              [
                Markup.callbackButton("‚ÑπÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø", "projectInfo"),
                Markup.callbackButton("üí∞ –ü–†–û–§–ò–¢–´", "myProfits")
              ],
              [Markup.callbackButton("üß∞ –ò–ù–°–¢–†–£–ú–ï–ù–¢–´", "settings")],
              ...(ctx.state.user.admin == true
                ? [[Markup.callbackButton("üíª –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨", "admin")]]
                : []),
            ]),
          }
        )
        .then(() => {
          console.log('Fallback —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', ctx.from.id);
        })
        .catch((err) => {
          console.log('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ fallback —Å–æ–æ–±—â–µ–Ω–∏—è:', err);
          return err;
        });
    }
  } catch (err) {
    console.log('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ start.js:', err);
    
    try {
      return ctx.replyWithHTML("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    } catch (finalErr) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', finalErr);
      return finalErr;
    }
  }
};