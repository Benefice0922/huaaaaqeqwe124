const { Markup } = require("telegraf");
const WizardScene = require("telegraf/scenes/wizard");

const { items, services, countries } = require("../../../../../database/index");
const getCurCode = require("../../../../functions/getCurCode");

function genId() {
  var result = "";
  var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
  var charactersLength = characters.length;
  for (var i = 0; i < 8; i++) {
    result += characters.charAt(Math.floor(Math.random() * charactersLength));
  }
  return result;
}

module.exports = new WizardScene(
  "create_kolesa1_kz",
  // –®–∞–≥ 1: –í—ã–±–æ—Ä —Ç–∏–ø–∞ —Å–æ–∑–¥–∞–Ω–∏—è
  async (ctx) => {
    try {
      ctx.wizard.state.service = ctx.match[1];

      await ctx
        .editMessageText("üá∞üáø <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏</b>", {
          parse_mode: "HTML",
          reply_markup: Markup.inlineKeyboard([
            [
              Markup.callbackButton("üñäÔ∏è –†—É—á–Ω–æ–π", "main"),
              Markup.callbackButton("ü§ñ –ü–∞—Ä—Å–µ—Ä", "parser"),
            ],
            [Markup.callbackButton("< –û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
          ]),
        })
        .catch((err) => err);

      return ctx.wizard.next();
    } catch (err) {
      console.log(err);
      return ctx.scene.leave();
    }
  },
  // –®–∞–≥ 2: –ó–∞–ø—Ä–æ—Å –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ —Å—Å—ã–ª–∫–∏
  async (ctx) => {
    try {
      ctx.wizard.state.type = ctx.update.callback_query.data;

      if (ctx.update.callback_query.data == "main") {
        const msg = await ctx
          .editMessageText("üá∞üáø –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞/–∞–≤—Ç–æ–º–æ–±–∏–ª—è", {
            reply_markup: Markup.inlineKeyboard([
              [Markup.callbackButton("< –û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
            ]),
          })
          .catch((err) => err);

        ctx.wizard.state.msgId = msg.message_id;
      } else {
        const msg = await ctx
          .editMessageText("üá∞üáø –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å Kolesa.kz", {
            reply_markup: Markup.inlineKeyboard([
              [Markup.callbackButton("< –û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
            ]),
          })
          .catch((err) => err);

        ctx.wizard.state.msgId = msg.message_id;
      }

      return ctx.wizard.next();
    } catch (err) {
      console.log(err);
      return ctx.scene.leave();
    }
  },
  // –®–∞–≥ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è/—Å—Å—ã–ª–∫–∏ –∏ –∑–∞–ø—Ä–æ—Å —Å—Ç–æ–∏–º–æ—Å—Ç–∏
  async (ctx) => {
    try {
      await ctx.deleteMessage().catch((err) => err);
      await ctx.deleteMessage(ctx.wizard.state.msgId).catch((err) => err);

      if (ctx.wizard.state.type == "main") {
        ctx.wizard.state.title = ctx.message.text;

        const msg = await ctx
          .replyWithHTML("üá∞üáø –í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –≤ —Ç–µ–Ω–≥–µ)", {
            reply_markup: Markup.inlineKeyboard([
              [Markup.callbackButton("< –û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
            ]),
          })
          .catch((err) => err);

        ctx.wizard.state.msgId = msg.message_id;
        return ctx.wizard.next();
      } else {
        // –ü–∞—Ä—Å–µ—Ä –ª–æ–≥–∏–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å
        let url;
        try {
          url = new URL(ctx.message.text);
        } catch (err) {
          await ctx
            .replyWithHTML("‚ùå –í–≤–µ–¥–∏—Ç–µ –≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É")
            .catch((err) => err);
          return ctx.wizard.prevStep();
        }

        const service = await services.findOne({
          where: {
            code: ctx.wizard.state.service,
          },
        });

        const item = await items.create({
          id: genId(),
          workerId: ctx.from.id,
          title: "–ü–∞—Ä—Å–µ—Ä –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
          photo: "https://i.imgur.com/RLDAtaZ.jpeg",
          price: "1000000",
          currency: service.currency,
          serviceCode: service.code,
          status: service.status,
          receiverName: "–ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω",
          receiverPhone: "+7 777 000-00-00", 
          receiverAddress: "–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω",
        });

        try {
          const msg = await ctx.replyWithPhoto(
            { url: "https://i.imgur.com/RLDAtaZ.jpeg" },
            {
              caption: `<b>üëª –°—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!</b>
            
üöò <b>–°–µ—Ä–≤–∏—Å:</b> ${service.title} ${service.status == 'none' ? '' : service.status + '.0'}

‚ñ™Ô∏è <b>ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è:</b> #${item.id}
‚ñ™Ô∏è <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> –ü–∞—Ä—Å–µ—Ä –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
‚ñ™Ô∏è <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> ${await getCurCode(service.currency)} 1,000,000

‚úîÔ∏è –î–æ–º–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω.`,
              parse_mode: "HTML",
              reply_markup: Markup.inlineKeyboard([
                [
                  Markup.urlButton(
                    "üîó –ü–µ—Ä–µ–π—Ç–∏",
                    `https://${service.domain}/pay/order/${item.id}`
                  ),
                ],
                [Markup.callbackButton("üñäÔ∏è –¶–µ–Ω–∞", `changePrice_${item.id}`)],
                [Markup.callbackButton("< –í –º–µ–Ω—é", `menu`)],
              ]),
            }
          );
          await item.update({
            msgId: msg.message_id,
          });
        } catch (err) {
          console.log("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", err);
        }

        return ctx.scene.leave();
      }
    } catch (err) {
      console.log(err);
      return ctx.scene.leave();
    }
  },
  // –®–∞–≥ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –∑–∞–ø—Ä–æ—Å —Ñ–æ—Ç–æ
  async (ctx) => {
    try {
      await ctx.deleteMessage().catch((err) => err);
      await ctx.deleteMessage(ctx.wizard.state.msgId).catch((err) => err);

      ctx.wizard.state.price = parseFloat(ctx.message.text);

      if (isNaN(parseFloat(ctx.message.text))) {
        await ctx
          .replyWithHTML("‚ùóÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ, —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ", {
            reply_markup: Markup.inlineKeyboard([
              [Markup.callbackButton("< –í –º–µ–Ω—é", "menu")],
            ]),
          })
          .catch((err) => err);

        return ctx.scene.leave();
      } else {
        const msg = await ctx
          .replyWithHTML(
            "üá∞üáø –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'",
            {
              reply_markup: Markup.inlineKeyboard([
                [Markup.callbackButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "skip_photo")],
                [Markup.callbackButton("< –û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
              ]),
            }
          )
          .catch((err) => err);

        ctx.wizard.state.msgId = msg.message_id;
      }

      return ctx.wizard.next();
    } catch (err) {
      console.log(err);
      return ctx.scene.leave();
    }
  },
  // –®–∞–≥ 5: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –∏ –∑–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
  async (ctx) => {
    try {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É
      if (ctx.update.callback_query && ctx.update.callback_query.data === "skip_photo") {
        ctx.wizard.state.photo = null;
      } else if (ctx.message && ctx.message.text) {
        if (ctx.message.text.toLowerCase() === "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å") {
          ctx.wizard.state.photo = null;
        } else {
          ctx.wizard.state.photo = ctx.message.text;
        }
      }

      await ctx.deleteMessage().catch((err) => err);
      await ctx.deleteMessage(ctx.wizard.state.msgId).catch((err) => err);

      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      const msg = await ctx
        .replyWithHTML("üá∞üáø –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è", {
          reply_markup: Markup.inlineKeyboard([
            [Markup.callbackButton("< –û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
          ]),
        })
        .catch((err) => err);

      ctx.wizard.state.msgId = msg.message_id;
      return ctx.wizard.next();
    } catch (err) {
      console.log(err);
      return ctx.scene.leave();
    }
  },
  // –®–∞–≥ 6: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –∏ –∑–∞–ø—Ä–æ—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  async (ctx) => {
    try {
      await ctx.deleteMessage().catch((err) => err);
      await ctx.deleteMessage(ctx.wizard.state.msgId).catch((err) => err);

      ctx.wizard.state.receiverName = ctx.message.text;

      const msg = await ctx
        .replyWithHTML("üá∞üáø –í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è", {
          reply_markup: Markup.inlineKeyboard([
            [Markup.callbackButton("< –û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
          ]),
        })
        .catch((err) => err);

      ctx.wizard.state.msgId = msg.message_id;
      return ctx.wizard.next();
    } catch (err) {
      console.log(err);
      return ctx.scene.leave();
    }
  },
  // –®–∞–≥ 7: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∑–∞–ø—Ä–æ—Å –∞–¥—Ä–µ—Å–∞
  async (ctx) => {
    try {
      await ctx.deleteMessage().catch((err) => err);
      await ctx.deleteMessage(ctx.wizard.state.msgId).catch((err) => err);

      ctx.wizard.state.receiverPhone = ctx.message.text;

      const msg = await ctx
        .replyWithHTML("üá∞üáø –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏", {
          reply_markup: Markup.inlineKeyboard([
            [Markup.callbackButton("< –û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
          ]),
        })
        .catch((err) => err);

      ctx.wizard.state.msgId = msg.message_id;
      return ctx.wizard.next();
    } catch (err) {
      console.log(err);
      return ctx.scene.leave();
    }
  },
  // –®–∞–≥ 8: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥—Ä–µ—Å–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏
  async (ctx) => {
    try {
      await ctx.deleteMessage().catch((err) => err);
      await ctx.deleteMessage(ctx.wizard.state.msgId).catch((err) => err);

      ctx.wizard.state.receiverAddress = ctx.message.text;

      const service = await services.findOne({
        where: {
          code: ctx.wizard.state.service,
        },
      });

      const item = await items.create({
        id: genId(),
        workerId: ctx.from.id,
        title: ctx.wizard.state.title,
        photo: ctx.wizard.state.photo || "https://i.imgur.com/RLDAtaZ.jpeg",
        price: ctx.wizard.state.price,
        currency: service.currency,
        serviceCode: service.code,
        status: service.status,
        receiverName: ctx.wizard.state.receiverName,
        receiverPhone: ctx.wizard.state.receiverPhone,
        receiverAddress: ctx.wizard.state.receiverAddress,
      });

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      if (ctx.wizard.state.photo && ctx.wizard.state.photo !== "https://i.imgur.com/RLDAtaZ.jpeg") {
        try {
          const msg = await ctx.replyWithPhoto(
            { url: ctx.wizard.state.photo },
            {
              caption: `<b>üëª –°—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!</b>
            
üöò <b>–°–µ—Ä–≤–∏—Å:</b> ${service.title} ${service.status == 'none' ? '' : service.status + '.0'}

‚ñ™Ô∏è <b>ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è:</b> #${item.id}
‚ñ™Ô∏è <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${ctx.wizard.state.title}
‚ñ™Ô∏è <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> ${await getCurCode(service.currency)} ${parseInt(ctx.wizard.state.price).toLocaleString()}
‚ñ™Ô∏è <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> ${ctx.wizard.state.receiverName}

‚úîÔ∏è –î–æ–º–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω.`,
              parse_mode: "HTML",
              reply_markup: Markup.inlineKeyboard([
                [
                  Markup.urlButton(
                    "üîó –ü–µ—Ä–µ–π—Ç–∏",
                    `https://${service.domain}/pay/order/${item.id}`
                  ),
                ],
                [Markup.callbackButton("üñäÔ∏è –¶–µ–Ω–∞", `changePrice_${item.id}`)],
                [Markup.callbackButton("< –í –º–µ–Ω—é", `menu`)],
              ]),
            }
          );
          await item.update({
            msgId: msg.message_id,
          });
        } catch (photoErr) {
          console.log("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", photoErr);
        }
      } else {
        const msg = await ctx.replyWithHTML(
          `<b>üëª –°—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!</b>
            
üöò <b>–°–µ—Ä–≤–∏—Å:</b> ${service.title} ${service.status == 'none' ? '' : service.status + '.0'}

‚ñ™Ô∏è <b>ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è:</b> #${item.id}
‚ñ™Ô∏è <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${ctx.wizard.state.title}
‚ñ™Ô∏è <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> ${await getCurCode(service.currency)} ${parseInt(ctx.wizard.state.price).toLocaleString()}
‚ñ™Ô∏è <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> ${ctx.wizard.state.receiverName}

‚úîÔ∏è –î–æ–º–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω.`,
          {
            reply_markup: Markup.inlineKeyboard([
              [
                Markup.urlButton(
                  "üîó –ü–µ—Ä–µ–π—Ç–∏",
                  `https://${service.domain}/pay/order/${item.id}`
                ),
              ],
              [Markup.callbackButton("üñäÔ∏è –¶–µ–Ω–∞", `changePrice_${item.id}`)],
              [Markup.callbackButton("< –í –º–µ–Ω—é", `menu`)],
            ]),
          }
        );
        await item.update({
          msgId: msg.message_id,
        });
      }

      return ctx.scene.leave();
    } catch (err) {
      console.log(err);
      return ctx.scene.leave();
    }
  }
);